[gd_scene load_steps=17 format=2]

[ext_resource path="res://scenes/utils/DungeonGenerator_v2.tscn" type="PackedScene" id=1]
[ext_resource path="res://tilesets/basic.tres" type="TileSet" id=2]
[ext_resource path="res://tilesets/shadows.tres" type="TileSet" id=3]
[ext_resource path="res://tilesets/fog.tres" type="TileSet" id=4]
[ext_resource path="res://scenes/Character.tscn" type="PackedScene" id=5]
[ext_resource path="res://scenes/utils/Pathfinder.tscn" type="PackedScene" id=6]
[ext_resource path="res://tilesets/int_tileset.tres" type="TileSet" id=7]
[ext_resource path="res://fonts/textFont.tres" type="DynamicFont" id=8]
[ext_resource path="res://scenes/UI.gd" type="Script" id=9]
[ext_resource path="res://scenes/UI/InventoryMenu.tscn" type="PackedScene" id=10]
[ext_resource path="res://scenes/utils/ItemGenerator.tscn" type="PackedScene" id=11]
[ext_resource path="res://scenes/UI/MenuTab.tscn" type="PackedScene" id=12]
[ext_resource path="res://scenes/UI/SkillRow.tscn" type="PackedScene" id=13]
[ext_resource path="res://scenes/UI/CharacterMenu.gd" type="Script" id=14]

[sub_resource type="GDScript" id=1]
script/source = "extends Node2D

onready var ui = get_node(\"UI\")
onready var inventoryMenu = get_node(\"InventoryMenu\")
onready var characterMenu = get_node(\"CharacterMenu\")
onready var currentLevel = get_node(\"CurrentLevel\")
onready var dungeon = currentLevel.dungeon as TileMap
onready var fog = currentLevel.fog as TileMap
onready var shadows = currentLevel.shadows as TileMap
onready var character = get_node(\"CurrentLevel/Character\") as Character
onready var dungeonGenerator = get_node(\"Utils/DungeonGenerator_v2\")
onready var pathfinder = get_node(\"Utils/Pathfinder\")
onready var itemGenerator = get_node(\"Utils/ItemGenerator\") as ItemGenerator

var coroutineReturn
var mode = \"\"
var choiceList = []

func _ready():
	dungeonGenerator.newFloor()
	currentLevel.initShadows()
	currentLevel.placeCharacter()
	for _i in range(5):
		currentLevel.spawnMonster()
	for _i in range(15):
		currentLevel.dropItem()
	set_process_input(true)

func _input(event):
	if (event.is_action_pressed(\"ui_up\")):
		cancelMode()
		character.move(Vector2(0,-1))
	elif (event.is_action_pressed(\"ui_down\")):
		cancelMode()
		character.move(Vector2(0,1))
	elif (event.is_action_pressed(\"ui_left\")):
		cancelMode()
		character.move(Vector2(-1,0))
	elif (event.is_action_pressed(\"ui_right\")):
		cancelMode()
		character.move(Vector2(1,0))
	elif (event.is_action_released(\"inventory\")):
		cancelMode()
		inventoryMenu.open()
		return
	elif (event.is_action_released(\"characterMenu\")):
		cancelMode()
		characterMenu.open()
		return
	elif (event.is_action_released(\"pickLoot\")):
		cancelMode()
		var loots = currentLevel.checkForLoot(character.pos)
		if loots.size() == 0:
			ui.writeNoLoot()
		elif loots.size() == 1:
			if loots[0].size() == 1:
				character.pickItem(loots[0][0])
			else:
				ui.askForNumber(loots[0].size())
				yield(ui, \"coroutine_signal\")
				if coroutineReturn != null and coroutineReturn is int:
					for c in range(coroutineReturn):
						character.pickItem(loots[0][c])
				else:
					ui.write(\"Ok then.\")
				coroutineReturn = null
		else:
			ui.write(currentLevel.getLootChoice(loots))
			mode = \"pickItem\"
			choiceList = loots
	else:
		for i in range(0, 9):
			if (event.is_action_released(\"shortcut\" + String(i))):
				if choiceList.size() < i:
					return
				match mode:
					\"pickItem\":
						if choiceList[i-1].size() == 1:
							character.pickItem(choiceList[i-1][0])
						else:
							ui.askForNumber(choiceList[i-1].size())
							yield(ui, \"coroutine_signal\")
							if coroutineReturn != null and coroutineReturn is int:
								for c in range(coroutineReturn):
									character.pickItem(choiceList[i-1][c])
							else:
								ui.write(\"Ok then.\")
							coroutineReturn = null
						mode = \"\"
						cancelMode()
				return

func cancelMode():
	if mode != \"\":
		ui.write(\"Ok then.\")
	mode = \"\"
	choiceList = []

func getReturnedNumber(result):
	coroutineReturn = result
"

[sub_resource type="GDScript" id=2]
script/source = "extends Node2D

onready var monsterScene = preload(\"res://scenes/Monster.tscn\")
onready var lootScene = preload(\"res://scenes/Loot.tscn\")

onready var game = get_parent()
onready var dungeon = get_node(\"Map\")
onready var fog = get_node(\"Fog\")
onready var shadows = get_node(\"Shadows\")
onready var monsters = get_node(\"Monsters\")
onready var loots = get_node(\"Loots\")

func refresh_view():
	clearFog()
	for i in range(-GLOBAL.VIEW_RANGE+1, GLOBAL.VIEW_RANGE):
		for j in range(-GLOBAL.VIEW_RANGE+1, GLOBAL.VIEW_RANGE):
			if (pow(i,2)+pow(j,2) <= pow(GLOBAL.VIEW_RANGE,2)):
				var pos = game.character.pos
				var points = game.pathfinder.get_line(pos, pos+Vector2(i,j))
				for p in points:
					game.fog.set_cellv(p, 0)
					game.fog.update_bitmask_area(p)
					game.shadows.set_cellv(p, 1)
					game.shadows.update_bitmask_area(p)
					for m in game.currentLevel.monsters.get_children():
						if m.pos == p:
							m.awake()
					var vision = game.currentLevel.isCellFree(p)
					if !vision[3]:
						break

func initShadows():
	for i in range(-1, GLOBAL.FLOOR_SIZE_X+1):
		for j in range(-1, GLOBAL.FLOOR_SIZE_Y+1):
			shadows.set_cell(i, j, 0)
			shadows.update_bitmask_area(Vector2(i, j))

func clearFog():
	for i in range(GLOBAL.FLOOR_SIZE_X):
		for j in range(GLOBAL.FLOOR_SIZE_Y):
			fog.set_cell(i, j, 1)

# [isFree, code, entity, isVisible]
func isCellFree(cell):
	if cell.x < 0 or cell.x >= GLOBAL.FLOOR_SIZE_X:
		return [false, \"OOB\", null, false]
	if cell.y < 0 or cell.y >= GLOBAL.FLOOR_SIZE_Y:
		return [false, \"OOB\", null, false]
	for m in monsters.get_children():
		if cell == m.pos:
			return [false, \"monster\", m, true]
	if dungeon.get_cellv(cell) == GLOBAL.GRID_ID:
		return [false, \"grid\", null, true]
	if dungeon.get_cellv(cell) == GLOBAL.DOOR_ID:
		if dungeon.get_cell_autotile_coord(cell.x, cell.y) == Vector2(0, 0):
			return [true, \"floor\", null, true]
		else:
			return [false, \"door\", null, false]
	if dungeon.get_cellv(cell) == GLOBAL.FLOOR_ID:
		return [true, \"floor\", null, true]
	return [false, \"unknown\", null, false]

func getRandomFreeCell():
	while(true):
		var x = randi() % GLOBAL.FLOOR_SIZE_X
		var y = randi() % GLOBAL.FLOOR_SIZE_Y
		var cell = Vector2(x, y)
		if isCellFree(cell)[0]:
			return cell

func placeCharacter():
	var cell = getRandomFreeCell()
	game.character.init()
	game.character.setPosition(cell)

func spawnMonster():
	var cell = getRandomFreeCell()
	var monster = monsterScene.instance()
	monsters.add_child(monster)
	monster.spawn(0)
	monster.setPosition(cell)

func dropItem():
	var cell = getRandomFreeCell()
	var rarity = randi() % 2
	var item = game.itemGenerator.generateItem(rarity)
	if item == null:
		return
	var loot = lootScene.instance()
	loots.add_child(loot)
	loot.init(item, cell)

func checkForLoot(cell):
	var dict:Dictionary = {}
	var currentId = 100000
	for idx in GLOBAL.itemsOnFloor.keys():
		if GLOBAL.itemsOnFloor[idx][0] != cell:
			continue
		var current = GLOBAL.items[idx]
		if current[GLOBAL.IT_STACK] == null:
			dict[currentId] = [idx]
			currentId += 1
			continue
		if !dict.has(current[GLOBAL.IT_STACK]):
			dict[current[GLOBAL.IT_STACK]] = [idx]
		else:
			dict[current[GLOBAL.IT_STACK]].append(idx)
	var result = []
	for d in dict.keys():
		result.append(dict[d])
	return result
#
#	var result = []
#	for idx in GLOBAL.itemsOnFloor.keys():
#		if GLOBAL.itemsOnFloor[idx][0] == cell:
#			result.append(idx)
#	return result

func getLootMessage(cell):
	var lootList = checkForLoot(cell)
	if lootList.size() == 0:
		return null
	var msg = \"You see \"
	var list = []
	for l in lootList:
		list.append(Utils.addArticle(GLOBAL.items[l[0]][GLOBAL.IT_NAME], l.size()))
	msg += Utils.makeList(list) + \".\"
	return msg

func getLootChoice(lootList):
	var msg = \"Pick what?\"
	var count = 1
	for l in lootList:
		msg += \" [\" + game.ui.color(String(count), \"yellow\") + \"] \"
		msg += Utils.addArticle(GLOBAL.items[l[0]][GLOBAL.IT_NAME], l.size())
		count += 1
	return msg

func openDoor(pos):
	if dungeon.get_cellv(pos) != GLOBAL.DOOR_ID:
		return
	dungeon.set_cellv(pos, GLOBAL.DOOR_ID, false, false, false, Vector2(0, 0))
"

[node name="Game" type="Node2D"]
scale = Vector2( 4, 4 )
script = SubResource( 1 )

[node name="Utils" type="Node" parent="."]

[node name="DungeonGenerator_v2" parent="Utils" instance=ExtResource( 1 )]

[node name="Pathfinder" parent="Utils" instance=ExtResource( 6 )]

[node name="ItemGenerator" parent="Utils" instance=ExtResource( 11 )]

[node name="CurrentLevel" type="Node2D" parent="."]
position = Vector2( 5, 7 )
script = SubResource( 2 )

[node name="Map" type="TileMap" parent="CurrentLevel"]
tile_set = ExtResource( 2 )
cell_size = Vector2( 9, 9 )
format = 1
tile_data = PoolIntArray( 0, 1, 2, 1, 1, 2, 2, 1, 2, 3, 1, 1, 4, 1, 2, 5, 1, 65537, 6, 1, 65536, 7, 1, 2, 8, 1, 1, 9, 1, 65538, 10, 1, 0, 11, 1, 2, 12, 1, 65538, 13, 1, 1, 14, 1, 0, 15, 1, 1, 16, 1, 1, 17, 1, 65538, 18, 1, 2, 19, 1, 65538, 20, 1, 0, 21, 1, 1, 22, 1, 0, 23, 1, 65537, 24, 1, 65537, 25, 1, 0, 26, 1, 65537, 27, 1, 0, 28, 1, 0, 29, 1, 0, 30, 1, 0, 31, 1, 65537, 32, 1, 1, 33, 1, 65536, 34, 1, 65538, 35, 1, 65537, 36, 1, 1, 65536, 1, 1, 65537, 4, 2, 65538, 4, 2, 65539, 4, 3, 65540, 4, 3, 65541, 4, 2, 65542, 4, 0, 65543, 4, 0, 65544, 4, 0, 65545, 4, 3, 65546, 4, 3, 65547, 4, 3, 65548, 4, 2, 65549, 4, 3, 65550, 4, 2, 65551, 4, 3, 65552, 1, 65537, 65572, 1, 0, 131072, 1, 65537, 131073, 4, 3, 131074, 4, 0, 131075, 4, 0, 131076, 4, 2, 131077, 4, 2, 131078, 4, 1, 131079, 4, 3, 131080, 4, 2, 131081, 4, 2, 131082, 4, 2, 131083, 4, 0, 131084, 4, 0, 131085, 4, 2, 131086, 4, 2, 131087, 4, 2, 131088, 1, 65537, 131108, 1, 65537, 196608, 1, 65538, 196609, 4, 1, 196610, 4, 2, 196611, 4, 3, 196612, 4, 3, 196613, 4, 2, 196614, 4, 0, 196615, 4, 2, 196616, 4, 2, 196617, 4, 1, 196618, 4, 0, 196619, 4, 2, 196620, 4, 1, 196621, 4, 0, 196622, 4, 0, 196623, 4, 1, 196624, 1, 65538, 196644, 1, 65538, 262144, 1, 0, 262145, 4, 0, 262146, 4, 2, 262147, 4, 2, 262148, 4, 2, 262149, 4, 1, 262150, 4, 1, 262151, 4, 0, 262152, 4, 1, 262153, 4, 3, 262154, 4, 3, 262155, 4, 2, 262156, 4, 2, 262157, 4, 2, 262158, 4, 2, 262159, 4, 3, 262160, 1, 1, 262180, 1, 0, 327680, 1, 65538, 327681, 4, 1, 327682, 4, 1, 327683, 4, 0, 327684, 4, 2, 327685, 4, 1, 327686, 4, 2, 327687, 4, 0, 327688, 4, 1, 327689, 4, 2, 327690, 4, 2, 327691, 4, 2, 327692, 4, 1, 327693, 4, 1, 327694, 4, 1, 327695, 4, 2, 327696, 1, 2, 327716, 1, 65536, 393216, 1, 65538, 393217, 4, 3, 393218, 4, 1, 393219, 4, 3, 393220, 4, 1, 393221, 4, 0, 393222, 4, 3, 393223, 4, 3, 393224, 4, 3, 393225, 4, 3, 393226, 4, 3, 393227, 4, 2, 393228, 4, 1, 393229, 4, 2, 393230, 4, 1, 393231, 4, 3, 393232, 1, 65536, 393252, 1, 65538, 458752, 1, 0, 458753, 4, 3, 458754, 4, 3, 458755, 4, 2, 458756, 4, 0, 458757, 4, 1, 458758, 4, 3, 458759, 4, 3, 458760, 4, 2, 458761, 4, 3, 458762, 4, 3, 458763, 4, 3, 458764, 4, 0, 458765, 4, 3, 458766, 4, 2, 458767, 4, 1, 458768, 1, 1, 458788, 1, 1, 524288, 1, 1, 524289, 4, 3, 524290, 4, 1, 524291, 4, 1, 524292, 4, 0, 524293, 4, 2, 524294, 4, 1, 524295, 4, 3, 524296, 4, 2, 524297, 4, 2, 524298, 4, 2, 524299, 4, 1, 524300, 4, 2, 524301, 4, 3, 524302, 4, 2, 524303, 4, 1, 524304, 1, 2, 524324, 1, 0, 589824, 1, 65537, 589825, 4, 0, 589826, 4, 2, 589827, 4, 0, 589828, 4, 0, 589829, 4, 2, 589830, 4, 1, 589831, 4, 1, 589832, 4, 2, 589833, 4, 3, 589834, 4, 1, 589835, 4, 3, 589836, 4, 3, 589837, 4, 0, 589838, 4, 2, 589839, 4, 2, 589840, 1, 2, 589860, 1, 2, 655360, 1, 2, 655361, 4, 3, 655362, 4, 3, 655363, 4, 1, 655364, 4, 1, 655365, 4, 0, 655366, 4, 0, 655367, 4, 0, 655368, 4, 0, 655369, 4, 0, 655370, 4, 2, 655371, 4, 2, 655372, 4, 0, 655373, 4, 2, 655374, 4, 0, 655375, 4, 1, 655376, 1, 65537, 655396, 1, 2, 720896, 1, 65537, 720897, 4, 1, 720898, 4, 0, 720899, 4, 1, 720900, 4, 0, 720901, 4, 3, 720902, 4, 2, 720903, 4, 1, 720904, 4, 1, 720905, 4, 0, 720906, 4, 2, 720907, 4, 1, 720908, 4, 3, 720909, 4, 2, 720910, 4, 1, 720911, 4, 1, 720912, 1, 0, 720932, 1, 65538, 786432, 1, 65537, 786433, 4, 2, 786434, 4, 3, 786435, 4, 1, 786436, 4, 2, 786437, 4, 2, 786438, 4, 0, 786439, 4, 0, 786440, 4, 0, 786441, 4, 1, 786442, 4, 0, 786443, 4, 0, 786444, 4, 1, 786445, 4, 0, 786446, 4, 2, 786447, 4, 3, 786448, 1, 0, 786468, 1, 1, 851968, 1, 1, 851969, 4, 1, 851970, 4, 3, 851971, 4, 1, 851972, 4, 2, 851973, 4, 2, 851974, 4, 2, 851975, 4, 2, 851976, 4, 3, 851977, 4, 0, 851978, 4, 2, 851979, 4, 3, 851980, 4, 0, 851981, 4, 2, 851982, 4, 0, 851983, 4, 3, 851984, 1, 1, 852004, 1, 65538, 917504, 1, 65537, 917505, 1, 65538, 917506, 1, 1, 917507, 1, 65536, 917508, 1, 1, 917509, 1, 65537, 917510, 1, 65536, 917511, 1, 65538, 917512, 1, 0, 917513, 1, 65537, 917514, 1, 1, 917515, 1, 65536, 917516, 1, 1, 917517, 1, 2, 917518, 1, 2, 917519, 1, 1, 917520, 1, 1, 917540, 1, 1, 983040, 1, 0, 983076, 1, 2, 1048576, 1, 65538, 1048612, 1, 65537, 1114112, 1, 2, 1114126, 1, 65537, 1114141, 1, 0, 1114148, 1, 65538, 1179648, 1, 0, 1179649, 1, 2, 1179650, 1, 65537, 1179651, 1, 65536, 1179652, 1, 0, 1179653, 1, 1, 1179654, 1, 65538, 1179655, 1, 65537, 1179656, 1, 0, 1179657, 1, 65538, 1179658, 1, 2, 1179659, 1, 65537, 1179660, 1, 65538, 1179661, 1, 2, 1179662, 1, 1, 1179663, 1, 65537, 1179664, 1, 2, 1179665, 1, 65536, 1179666, 1, 65538, 1179667, 1, 0, 1179668, 1, 1, 1179669, 1, 0, 1179670, 1, 1, 1179671, 1, 65538, 1179672, 1, 65538, 1179673, 1, 2, 1179674, 1, 65537, 1179675, 1, 65538, 1179676, 1, 0, 1179677, 1, 2, 1179678, 1, 65538, 1179679, 1, 65536, 1179680, 1, 65536, 1179681, 1, 65537, 1179682, 1, 65537, 1179683, 1, 65537, 1179684, 1, 2 )

[node name="Loots" type="Node2D" parent="CurrentLevel"]

[node name="Character" parent="CurrentLevel" instance=ExtResource( 5 )]

[node name="Monsters" type="Node2D" parent="CurrentLevel"]

[node name="Fog" type="TileMap" parent="CurrentLevel"]
modulate = Color( 1, 1, 1, 0.666667 )
tile_set = ExtResource( 4 )
cell_size = Vector2( 9, 9 )
format = 1

[node name="Shadows" type="TileMap" parent="CurrentLevel"]
tile_set = ExtResource( 3 )
cell_size = Vector2( 9, 9 )
format = 1
tile_data = PoolIntArray( -1966060, 1, 0, -65537, 2, 0, -131072, 2, 65537, -131071, 2, 65537, -131070, 2, 65537, -131069, 2, 65537, -131068, 2, 65537, -131067, 2, 65537, -131066, 2, 65537, -131065, 2, 65537, -131064, 2, 65537, -131063, 2, 65537, -131062, 2, 65537, -131061, 2, 65537, -131060, 2, 65537, -131059, 2, 65537, -131058, 2, 65537, -131057, 2, 65537, -131056, 2, 65537, -131055, 2, 65537, -131054, 2, 65537, -131053, 2, 65537, -131052, 2, 2, -1, 2, 65537, -65536, 2, 65537, -65535, 2, 65537, -65534, 2, 65537, -65533, 2, 65537, -65532, 2, 65537, -65531, 2, 65537, -65530, 2, 65537, -65529, 2, 65537, -65528, 2, 65537, -65527, 2, 65537, -65526, 2, 65537, -65525, 2, 65537, -65524, 2, 65537, -65523, 2, 65537, -65522, 2, 65537, -65521, 2, 65537, -65520, 2, 65537, -65519, 2, 65537, -65518, 2, 65537, -65517, 2, 65537, -65516, 2, 65537, 65535, 2, 65537, 10, 1, 3, 11, 1, 4, 12, 1, 4, 13, 1, 4, 14, 1, 4, 15, 1, 5, 16, 2, 131072, 17, 2, 65537, 18, 2, 65537, 19, 2, 65537, 20, 2, 65537, 131071, 2, 65537, 65544, 1, 3, 65545, 1, 4, 65546, 1, 65540, 65547, 1, 65540, 65548, 1, 65540, 65549, 1, 65540, 65550, 1, 65540, 65551, 1, 65540, 65552, 1, 5, 65553, 2, 65537, 65554, 2, 65537, 65555, 2, 65537, 65556, 2, 65537, 196607, 2, 65537, 131080, 1, 65539, 131081, 1, 65540, 131082, 1, 65540, 131083, 1, 65540, 131084, 1, 65540, 131085, 1, 65540, 131086, 1, 65540, 131087, 1, 65540, 131088, 1, 65541, 131089, 2, 65537, 131090, 2, 65537, 131091, 2, 65537, 131092, 2, 65537, 262143, 2, 65537, 196615, 1, 3, 196616, 1, 65540, 196617, 1, 65540, 196618, 1, 65540, 196619, 1, 65540, 196620, 1, 65540, 196621, 1, 65540, 196622, 1, 65540, 196623, 1, 65540, 196624, 1, 65541, 196625, 2, 65537, 196626, 2, 65537, 196627, 2, 65537, 196628, 2, 65537, 327679, 2, 65537, 262151, 1, 65539, 262152, 1, 65540, 262153, 1, 65540, 262154, 1, 65540, 262155, 1, 65540, 262156, 1, 65540, 262157, 1, 65540, 262158, 1, 65540, 262159, 1, 65540, 262160, 1, 131077, 262161, 2, 131072, 262162, 2, 65537, 262163, 2, 65537, 262164, 2, 131074, 327687, 1, 0, 327688, 1, 131076, 327689, 1, 131076, 327690, 1, 131076, 327691, 1, 131076, 327692, 1, 131076, 327693, 1, 131076, 327694, 1, 131076, 327695, 1, 0, 458753, 1, 65540, 983042, 0, 65539, 983043, 0, 0, 983044, 0, 0, 983045, 0, 0, 983046, 0, 0, 983047, 0, 0, 983048, 0, 65541 )

[node name="UI" type="Node2D" parent="."]
script = ExtResource( 9 )

[node name="TextBox" type="TileMap" parent="UI"]
position = Vector2( 9, 189 )
tile_set = ExtResource( 7 )
cell_size = Vector2( 9, 9 )
format = 1
tile_data = PoolIntArray( -1, 1, 0, -65536, 1, 1, -65535, 1, 1, -65534, 1, 1, -65533, 1, 1, -65532, 1, 1, -65531, 1, 1, -65530, 1, 1, -65529, 1, 1, -65528, 1, 1, -65527, 1, 1, -65526, 1, 1, -65525, 1, 1, -65524, 1, 1, -65523, 1, 1, -65522, 1, 1, -65521, 1, 1, -65520, 1, 1, -65519, 1, 1, -65518, 1, 1, -65517, 1, 1, -65516, 1, 1, -65515, 1, 1, -65514, 1, 1, -65513, 1, 1, -65512, 1, 1, -65511, 1, 1, -65510, 1, 1, -65509, 1, 1, -65508, 1, 1, -65507, 1, 1, -65506, 1, 1, -65505, 1, 1, -65504, 1, 1, -65503, 1, 1, -65502, 1, 1, -65501, 1, 1, -65500, 1, 2, 65535, 1, 65536, 0, 1, 65537, 1, 1, 65537, 2, 1, 65537, 3, 1, 65537, 4, 1, 65537, 5, 1, 65537, 6, 1, 65537, 7, 1, 65537, 8, 1, 65537, 9, 1, 65537, 10, 1, 65537, 11, 1, 65537, 12, 1, 65537, 13, 1, 65537, 14, 1, 65537, 15, 1, 65537, 16, 1, 65537, 17, 1, 65537, 18, 1, 65537, 19, 1, 65537, 20, 1, 65537, 21, 1, 65537, 22, 1, 65537, 23, 1, 65537, 24, 1, 65537, 25, 1, 65537, 26, 1, 65537, 27, 1, 65537, 28, 1, 65537, 29, 1, 65537, 30, 1, 65537, 31, 1, 65537, 32, 1, 65537, 33, 1, 65537, 34, 1, 65537, 35, 1, 65537, 36, 1, 65538, 131071, 1, 65536, 65536, 1, 65537, 65537, 1, 65537, 65538, 1, 65537, 65539, 1, 65537, 65540, 1, 65537, 65541, 1, 65537, 65542, 1, 65537, 65543, 1, 65537, 65544, 1, 65537, 65545, 1, 65537, 65546, 1, 65537, 65547, 1, 65537, 65548, 1, 65537, 65549, 1, 65537, 65550, 1, 65537, 65551, 1, 65537, 65552, 1, 65537, 65553, 1, 65537, 65554, 1, 65537, 65555, 1, 65537, 65556, 1, 65537, 65557, 1, 65537, 65558, 1, 65537, 65559, 1, 65537, 65560, 1, 65537, 65561, 1, 65537, 65562, 1, 65537, 65563, 1, 65537, 65564, 1, 65537, 65565, 1, 65537, 65566, 1, 65537, 65567, 1, 65537, 65568, 1, 65537, 65569, 1, 65537, 65570, 1, 65537, 65571, 1, 65537, 65572, 1, 65538, 196607, 1, 65536, 131072, 1, 65537, 131073, 1, 65537, 131074, 1, 65537, 131075, 1, 65537, 131076, 1, 65537, 131077, 1, 65537, 131078, 1, 65537, 131079, 1, 65537, 131080, 1, 65537, 131081, 1, 65537, 131082, 1, 65537, 131083, 1, 65537, 131084, 1, 65537, 131085, 1, 65537, 131086, 1, 65537, 131087, 1, 65537, 131088, 1, 65537, 131089, 1, 65537, 131090, 1, 65537, 131091, 1, 65537, 131092, 1, 65537, 131093, 1, 65537, 131094, 1, 65537, 131095, 1, 65537, 131096, 1, 65537, 131097, 1, 65537, 131098, 1, 65537, 131099, 1, 65537, 131100, 1, 65537, 131101, 1, 65537, 131102, 1, 65537, 131103, 1, 65537, 131104, 1, 65537, 131105, 1, 65537, 131106, 1, 65537, 131107, 1, 65537, 131108, 1, 65538, 262143, 1, 65536, 196608, 1, 65537, 196609, 1, 65537, 196610, 1, 65537, 196611, 1, 65537, 196612, 1, 65537, 196613, 1, 65537, 196614, 1, 65537, 196615, 1, 65537, 196616, 1, 65537, 196617, 1, 65537, 196618, 1, 65537, 196619, 1, 65537, 196620, 1, 65537, 196621, 1, 65537, 196622, 1, 65537, 196623, 1, 65537, 196624, 1, 65537, 196625, 1, 65537, 196626, 1, 65537, 196627, 1, 65537, 196628, 1, 65537, 196629, 1, 65537, 196630, 1, 65537, 196631, 1, 65537, 196632, 1, 65537, 196633, 1, 65537, 196634, 1, 65537, 196635, 1, 65537, 196636, 1, 65537, 196637, 1, 65537, 196638, 1, 65537, 196639, 1, 65537, 196640, 1, 65537, 196641, 1, 65537, 196642, 1, 65537, 196643, 1, 65537, 196644, 1, 65538, 327679, 1, 65536, 262144, 1, 65537, 262145, 1, 65537, 262146, 1, 65537, 262147, 1, 65537, 262148, 1, 65537, 262149, 1, 65537, 262150, 1, 65537, 262151, 1, 65537, 262152, 1, 65537, 262153, 1, 65537, 262154, 1, 65537, 262155, 1, 65537, 262156, 1, 65537, 262157, 1, 65537, 262158, 1, 65537, 262159, 1, 65537, 262160, 1, 65537, 262161, 1, 65537, 262162, 1, 65537, 262163, 1, 65537, 262164, 1, 65537, 262165, 1, 65537, 262166, 1, 65537, 262167, 1, 65537, 262168, 1, 65537, 262169, 1, 65537, 262170, 1, 65537, 262171, 1, 65537, 262172, 1, 65537, 262173, 1, 65537, 262174, 1, 65537, 262175, 1, 65537, 262176, 1, 65537, 262177, 1, 65537, 262178, 1, 65537, 262179, 1, 65537, 262180, 1, 65538, 393215, 1, 65536, 327680, 1, 65537, 327681, 1, 65537, 327682, 1, 65537, 327683, 1, 65537, 327684, 1, 65537, 327685, 1, 65537, 327686, 1, 65537, 327687, 1, 65537, 327688, 1, 65537, 327689, 1, 65537, 327690, 1, 65537, 327691, 1, 65537, 327692, 1, 65537, 327693, 1, 65537, 327694, 1, 65537, 327695, 1, 65537, 327696, 1, 65537, 327697, 1, 65537, 327698, 1, 65537, 327699, 1, 65537, 327700, 1, 65537, 327701, 1, 65537, 327702, 1, 65537, 327703, 1, 65537, 327704, 1, 65537, 327705, 1, 65537, 327706, 1, 65537, 327707, 1, 65537, 327708, 1, 65537, 327709, 1, 65537, 327710, 1, 65537, 327711, 1, 65537, 327712, 1, 65537, 327713, 1, 65537, 327714, 1, 65537, 327715, 1, 65537, 327716, 1, 65538, 458751, 1, 65536, 393216, 1, 65537, 393217, 1, 65537, 393218, 1, 65537, 393219, 1, 65537, 393220, 1, 65537, 393221, 1, 65537, 393222, 1, 65537, 393223, 1, 65537, 393224, 1, 65537, 393225, 1, 65537, 393226, 1, 65537, 393227, 1, 65537, 393228, 1, 65537, 393229, 1, 65537, 393230, 1, 65537, 393231, 1, 65537, 393232, 1, 65537, 393233, 1, 65537, 393234, 1, 65537, 393235, 1, 65537, 393236, 1, 65537, 393237, 1, 65537, 393238, 1, 65537, 393239, 1, 65537, 393240, 1, 65537, 393241, 1, 65537, 393242, 1, 65537, 393243, 1, 65537, 393244, 1, 65537, 393245, 1, 65537, 393246, 1, 65537, 393247, 1, 65537, 393248, 1, 65537, 393249, 1, 65537, 393250, 1, 65537, 393251, 1, 65537, 393252, 1, 65538, 524287, 1, 65536, 458752, 1, 65537, 458753, 1, 65537, 458754, 1, 65537, 458755, 1, 65537, 458756, 1, 65537, 458757, 1, 65537, 458758, 1, 65537, 458759, 1, 65537, 458760, 1, 65537, 458761, 1, 65537, 458762, 1, 65537, 458763, 1, 65537, 458764, 1, 65537, 458765, 1, 65537, 458766, 1, 65537, 458767, 1, 65537, 458768, 1, 65537, 458769, 1, 65537, 458770, 1, 65537, 458771, 1, 65537, 458772, 1, 65537, 458773, 1, 65537, 458774, 1, 65537, 458775, 1, 65537, 458776, 1, 65537, 458777, 1, 65537, 458778, 1, 65537, 458779, 1, 65537, 458780, 1, 65537, 458781, 1, 65537, 458782, 1, 65537, 458783, 1, 65537, 458784, 1, 65537, 458785, 1, 65537, 458786, 1, 65537, 458787, 1, 65537, 458788, 1, 65538, 589823, 1, 131072, 524288, 1, 131073, 524289, 1, 131073, 524290, 1, 131073, 524291, 1, 131073, 524292, 1, 131073, 524293, 1, 131073, 524294, 1, 131073, 524295, 1, 131073, 524296, 1, 131073, 524297, 1, 131073, 524298, 1, 131073, 524299, 1, 131073, 524300, 1, 131073, 524301, 1, 131073, 524302, 1, 131073, 524303, 1, 131073, 524304, 1, 131073, 524305, 1, 131073, 524306, 1, 131073, 524307, 1, 131073, 524308, 1, 131073, 524309, 1, 131073, 524310, 1, 131073, 524311, 1, 131073, 524312, 1, 131073, 524313, 1, 131073, 524314, 1, 131073, 524315, 1, 131073, 524316, 1, 131073, 524317, 1, 131073, 524318, 1, 131073, 524319, 1, 131073, 524320, 1, 131073, 524321, 1, 131073, 524322, 1, 131073, 524323, 1, 131073, 524324, 1, 131074 )

[node name="TextContainer" type="Node2D" parent="UI/TextBox"]
scale = Vector2( 0.25, 0.25 )

[node name="DiaryPanel" type="RichTextLabel" parent="UI/TextBox/TextContainer"]
margin_right = 1296.0
margin_bottom = 288.0
custom_colors/default_color = Color( 0.807843, 0.858824, 0.882353, 1 )
custom_fonts/normal_font = ExtResource( 8 )
scroll_active = false
scroll_following = true

[node name="SideMenu" type="TileMap" parent="UI"]
tile_set = ExtResource( 7 )
cell_size = Vector2( 9, 9 )
format = 1
tile_data = PoolIntArray( 65574, 0, 0, 65575, 0, 1, 65576, 0, 1, 65577, 0, 1, 65578, 0, 1, 65579, 0, 1, 65580, 0, 1, 65581, 0, 1, 65582, 0, 1, 65583, 0, 1, 65584, 0, 1, 65585, 0, 1, 65586, 0, 1, 65587, 0, 1, 65588, 0, 2, 131110, 0, 65536, 131111, 0, 65537, 131112, 0, 65537, 131113, 0, 65537, 131114, 0, 65537, 131115, 0, 65537, 131116, 0, 65537, 131117, 0, 65537, 131118, 0, 65537, 131119, 0, 65537, 131120, 0, 65537, 131121, 0, 65537, 131122, 0, 65537, 131123, 0, 65537, 131124, 0, 65538, 196646, 0, 65536, 196647, 0, 65537, 196648, 0, 65537, 196649, 0, 65537, 196650, 0, 65537, 196651, 0, 65537, 196652, 0, 65537, 196653, 0, 65537, 196654, 0, 65537, 196655, 0, 65537, 196656, 0, 65537, 196657, 0, 65537, 196658, 0, 65537, 196659, 0, 65537, 196660, 0, 65538, 262182, 0, 65536, 262183, 0, 65537, 262184, 0, 65537, 262185, 0, 65537, 262186, 0, 65537, 262187, 0, 65537, 262188, 0, 65537, 262189, 0, 65537, 262190, 0, 65537, 262191, 0, 65537, 262192, 0, 65537, 262193, 0, 65537, 262194, 0, 65537, 262195, 0, 65537, 262196, 0, 65538, 327718, 0, 65536, 327719, 0, 65537, 327720, 0, 65537, 327721, 0, 65537, 327722, 0, 65537, 327723, 0, 65537, 327724, 0, 65537, 327725, 0, 65537, 327726, 0, 65537, 327727, 0, 65537, 327728, 0, 65537, 327729, 0, 65537, 327730, 0, 65537, 327731, 0, 65537, 327732, 0, 65538, 393254, 0, 65536, 393255, 0, 65537, 393256, 0, 65537, 393257, 0, 65537, 393258, 0, 65537, 393259, 0, 65537, 393260, 0, 65537, 393261, 0, 65537, 393262, 0, 65537, 393263, 0, 65537, 393264, 0, 65537, 393265, 0, 65537, 393266, 0, 65537, 393267, 0, 65537, 393268, 0, 65538, 458790, 0, 65536, 458791, 0, 65537, 458792, 0, 65537, 458793, 0, 65537, 458794, 0, 65537, 458795, 0, 65537, 458796, 0, 65537, 458797, 0, 65537, 458798, 0, 65537, 458799, 0, 65537, 458800, 0, 65537, 458801, 0, 65537, 458802, 0, 65537, 458803, 0, 65537, 458804, 0, 65538, 524326, 0, 65536, 524327, 0, 65537, 524328, 0, 65537, 524329, 0, 65537, 524330, 0, 65537, 524331, 0, 65537, 524332, 0, 65537, 524333, 0, 65537, 524334, 0, 65537, 524335, 0, 65537, 524336, 0, 65537, 524337, 0, 65537, 524338, 0, 65537, 524339, 0, 65537, 524340, 0, 65538, 589862, 0, 65536, 589863, 0, 65537, 589864, 0, 65537, 589865, 0, 65537, 589866, 0, 65537, 589867, 0, 65537, 589868, 0, 65537, 589869, 0, 65537, 589870, 0, 65537, 589871, 0, 65537, 589872, 0, 65537, 589873, 0, 65537, 589874, 0, 65537, 589875, 0, 65537, 589876, 0, 65538, 655398, 0, 65536, 655399, 0, 65537, 655400, 0, 65537, 655401, 0, 65537, 655402, 0, 65537, 655403, 0, 65537, 655404, 0, 65537, 655405, 0, 65537, 655406, 0, 65537, 655407, 0, 65537, 655408, 0, 65537, 655409, 0, 65537, 655410, 0, 65537, 655411, 0, 65537, 655412, 0, 65538, 720934, 0, 65536, 720935, 0, 65537, 720936, 0, 65537, 720937, 0, 65537, 720938, 0, 65537, 720939, 0, 65537, 720940, 0, 65537, 720941, 0, 65537, 720942, 0, 65537, 720943, 0, 65537, 720944, 0, 65537, 720945, 0, 65537, 720946, 0, 65537, 720947, 0, 65537, 720948, 0, 65538, 786470, 0, 65536, 786471, 0, 65537, 786472, 0, 65537, 786473, 0, 65537, 786474, 0, 65537, 786475, 0, 65537, 786476, 0, 65537, 786477, 0, 65537, 786478, 0, 65537, 786479, 0, 65537, 786480, 0, 65537, 786481, 0, 65537, 786482, 0, 65537, 786483, 0, 65537, 786484, 0, 65538, 852006, 0, 65536, 852007, 0, 65537, 852008, 0, 65537, 852009, 0, 65537, 852010, 0, 65537, 852011, 0, 65537, 852012, 0, 65537, 852013, 0, 65537, 852014, 0, 65537, 852015, 0, 65537, 852016, 0, 65537, 852017, 0, 65537, 852018, 0, 65537, 852019, 0, 65537, 852020, 0, 65538, 917542, 0, 65536, 917543, 0, 65537, 917544, 0, 65537, 917545, 0, 65537, 917546, 0, 65537, 917547, 0, 65537, 917548, 0, 65537, 917549, 0, 65537, 917550, 0, 65537, 917551, 0, 65537, 917552, 0, 65537, 917553, 0, 65537, 917554, 0, 65537, 917555, 0, 65537, 917556, 0, 65538, 983078, 0, 65536, 983079, 0, 65537, 983080, 0, 65537, 983081, 0, 65537, 983082, 0, 65537, 983083, 0, 65537, 983084, 0, 65537, 983085, 0, 65537, 983086, 0, 65537, 983087, 0, 65537, 983088, 0, 65537, 983089, 0, 65537, 983090, 0, 65537, 983091, 0, 65537, 983092, 0, 65538, 1048614, 0, 65536, 1048615, 0, 65537, 1048616, 0, 65537, 1048617, 0, 65537, 1048618, 0, 65537, 1048619, 0, 65537, 1048620, 0, 65537, 1048621, 0, 65537, 1048622, 0, 65537, 1048623, 0, 65537, 1048624, 0, 65537, 1048625, 0, 65537, 1048626, 0, 65537, 1048627, 0, 65537, 1048628, 0, 65538, 1114150, 0, 65536, 1114151, 0, 65537, 1114152, 0, 65537, 1114153, 0, 65537, 1114154, 0, 65537, 1114155, 0, 65537, 1114156, 0, 65537, 1114157, 0, 65537, 1114158, 0, 65537, 1114159, 0, 65537, 1114160, 0, 65537, 1114161, 0, 65537, 1114162, 0, 65537, 1114163, 0, 65537, 1114164, 0, 65538, 1179686, 0, 65536, 1179687, 0, 65537, 1179688, 0, 65537, 1179689, 0, 65537, 1179690, 0, 65537, 1179691, 0, 65537, 1179692, 0, 65537, 1179693, 0, 65537, 1179694, 0, 65537, 1179695, 0, 65537, 1179696, 0, 65537, 1179697, 0, 65537, 1179698, 0, 65537, 1179699, 0, 65537, 1179700, 0, 65538, 1245222, 0, 65536, 1245223, 0, 65537, 1245224, 0, 65537, 1245225, 0, 65537, 1245226, 0, 65537, 1245227, 0, 65537, 1245228, 0, 65537, 1245229, 0, 65537, 1245230, 0, 65537, 1245231, 0, 65537, 1245232, 0, 65537, 1245233, 0, 65537, 1245234, 0, 65537, 1245235, 0, 65537, 1245236, 0, 65538, 1310758, 0, 65536, 1310759, 0, 65537, 1310760, 0, 65537, 1310761, 0, 65537, 1310762, 0, 65537, 1310763, 0, 65537, 1310764, 0, 65537, 1310765, 0, 65537, 1310766, 0, 65537, 1310767, 0, 65537, 1310768, 0, 65537, 1310769, 0, 65537, 1310770, 0, 65537, 1310771, 0, 65537, 1310772, 0, 65538, 1376294, 0, 65536, 1376295, 0, 65537, 1376296, 0, 65537, 1376297, 0, 65537, 1376298, 0, 65537, 1376299, 0, 65537, 1376300, 0, 65537, 1376301, 0, 65537, 1376302, 0, 65537, 1376303, 0, 65537, 1376304, 0, 65537, 1376305, 0, 65537, 1376306, 0, 65537, 1376307, 0, 65537, 1376308, 0, 65538, 1441830, 0, 65536, 1441831, 0, 65537, 1441832, 0, 65537, 1441833, 0, 65537, 1441834, 0, 65537, 1441835, 0, 65537, 1441836, 0, 65537, 1441837, 0, 65537, 1441838, 0, 65537, 1441839, 0, 65537, 1441840, 0, 65537, 1441841, 0, 65537, 1441842, 0, 65537, 1441843, 0, 65537, 1441844, 0, 65538, 1507366, 0, 65536, 1507367, 0, 65537, 1507368, 0, 65537, 1507369, 0, 65537, 1507370, 0, 65537, 1507371, 0, 65537, 1507372, 0, 65537, 1507373, 0, 65537, 1507374, 0, 65537, 1507375, 0, 65537, 1507376, 0, 65537, 1507377, 0, 65537, 1507378, 0, 65537, 1507379, 0, 65537, 1507380, 0, 65538, 1572902, 0, 65536, 1572903, 0, 65537, 1572904, 0, 65537, 1572905, 0, 65537, 1572906, 0, 65537, 1572907, 0, 65537, 1572908, 0, 65537, 1572909, 0, 65537, 1572910, 0, 65537, 1572911, 0, 65537, 1572912, 0, 65537, 1572913, 0, 65537, 1572914, 0, 65537, 1572915, 0, 65537, 1572916, 0, 65538, 1638438, 0, 65536, 1638439, 0, 65537, 1638440, 0, 65537, 1638441, 0, 65537, 1638442, 0, 65537, 1638443, 0, 65537, 1638444, 0, 65537, 1638445, 0, 65537, 1638446, 0, 65537, 1638447, 0, 65537, 1638448, 0, 65537, 1638449, 0, 65537, 1638450, 0, 65537, 1638451, 0, 65537, 1638452, 0, 65538, 1703974, 0, 65536, 1703975, 0, 65537, 1703976, 0, 65537, 1703977, 0, 65537, 1703978, 0, 65537, 1703979, 0, 65537, 1703980, 0, 65537, 1703981, 0, 65537, 1703982, 0, 65537, 1703983, 0, 65537, 1703984, 0, 65537, 1703985, 0, 65537, 1703986, 0, 65537, 1703987, 0, 65537, 1703988, 0, 65538, 1769510, 0, 65536, 1769511, 0, 65537, 1769512, 0, 65537, 1769513, 0, 65537, 1769514, 0, 65537, 1769515, 0, 65537, 1769516, 0, 65537, 1769517, 0, 65537, 1769518, 0, 65537, 1769519, 0, 65537, 1769520, 0, 65537, 1769521, 0, 65537, 1769522, 0, 65537, 1769523, 0, 65537, 1769524, 0, 65538, 1835046, 0, 131072, 1835047, 0, 131073, 1835048, 0, 131073, 1835049, 0, 131073, 1835050, 0, 131073, 1835051, 0, 131073, 1835052, 0, 131073, 1835053, 0, 131073, 1835054, 0, 131073, 1835055, 0, 131073, 1835056, 0, 131073, 1835057, 0, 131073, 1835058, 0, 131073, 1835059, 0, 131073, 1835060, 0, 131074 )

[node name="HPContainer" type="Node2D" parent="UI/SideMenu"]
position = Vector2( 360, 27 )
scale = Vector2( 0.25, 0.25 )

[node name="Label" type="Label" parent="UI/SideMenu/HPContainer"]
margin_right = 72.0
margin_bottom = 35.0
custom_fonts/font = ExtResource( 8 )
text = "HP"
align = 1
valign = 1

[node name="Current" type="Label" parent="UI/SideMenu/HPContainer/Label"]
margin_left = 72.0
margin_right = 180.0
margin_bottom = 35.0
custom_fonts/font = ExtResource( 8 )
text = "10"
align = 2
valign = 1

[node name="Slash" type="Label" parent="UI/SideMenu/HPContainer/Label"]
margin_left = 180.0
margin_right = 216.0
margin_bottom = 35.0
custom_fonts/font = ExtResource( 8 )
text = "/"
align = 1
valign = 1

[node name="Max" type="Label" parent="UI/SideMenu/HPContainer/Label"]
margin_left = 216.0
margin_right = 324.0
margin_bottom = 35.0
custom_fonts/font = ExtResource( 8 )
text = "10"
valign = 1

[node name="DmgContainer" type="Node2D" parent="UI/SideMenu"]
position = Vector2( 360, 36 )
scale = Vector2( 0.25, 0.25 )

[node name="Label" type="Label" parent="UI/SideMenu/DmgContainer"]
margin_right = 72.0
margin_bottom = 35.0
custom_fonts/font = ExtResource( 8 )
text = "Dmg"
align = 1
valign = 1

[node name="Current" type="Label" parent="UI/SideMenu/DmgContainer/Label"]
margin_left = 72.0
margin_right = 180.0
margin_bottom = 35.0
custom_fonts/font = ExtResource( 8 )
text = "10"
align = 2
valign = 1

[node name="HitContainer" type="Node2D" parent="UI/SideMenu"]
position = Vector2( 360, 45 )
scale = Vector2( 0.25, 0.25 )

[node name="Label" type="Label" parent="UI/SideMenu/HitContainer"]
margin_right = 72.0
margin_bottom = 35.0
custom_fonts/font = ExtResource( 8 )
text = "Hit"
align = 1
valign = 1

[node name="Current" type="Label" parent="UI/SideMenu/HitContainer/Label"]
margin_left = 72.0
margin_right = 180.0
margin_bottom = 35.0
custom_fonts/font = ExtResource( 8 )
text = "10"
align = 2
valign = 1

[node name="CAContainer" type="Node2D" parent="UI/SideMenu"]
position = Vector2( 360, 54 )
scale = Vector2( 0.25, 0.25 )

[node name="Label" type="Label" parent="UI/SideMenu/CAContainer"]
margin_right = 72.0
margin_bottom = 35.0
custom_fonts/font = ExtResource( 8 )
text = "CA"
align = 1
valign = 1

[node name="Current" type="Label" parent="UI/SideMenu/CAContainer/Label"]
margin_left = 72.0
margin_right = 180.0
margin_bottom = 35.0
custom_fonts/font = ExtResource( 8 )
text = "10"
align = 2
valign = 1

[node name="ProtContainer" type="Node2D" parent="UI/SideMenu"]
position = Vector2( 360, 63.25 )
scale = Vector2( 0.25, 0.25 )

[node name="Label" type="Label" parent="UI/SideMenu/ProtContainer"]
margin_right = 72.0
margin_bottom = 35.0
custom_fonts/font = ExtResource( 8 )
text = "Prot"
align = 1
valign = 1

[node name="Current" type="Label" parent="UI/SideMenu/ProtContainer/Label"]
margin_left = 72.0
margin_right = 180.0
margin_bottom = 35.0
custom_fonts/font = ExtResource( 8 )
text = "10"
align = 2
valign = 1

[node name="InventoryMenu" parent="." instance=ExtResource( 10 )]
visible = false

[node name="CharacterMenu" type="Node2D" parent="."]
visible = false
script = ExtResource( 14 )

[node name="Tabs" type="TileMap" parent="CharacterMenu"]
position = Vector2( 0, 18 )
tile_set = ExtResource( 7 )
cell_size = Vector2( 9, 9 )
format = 1
tile_data = PoolIntArray( 65536, 1, 0, 65537, 1, 1, 65538, 1, 1, 65539, 1, 1, 65540, 1, 1, 65541, 1, 1, 65542, 1, 1, 65543, 1, 1, 65544, 1, 1, 65545, 1, 1, 65546, 1, 1, 65547, 1, 1, 65548, 1, 1, 65549, 1, 1, 65550, 1, 2, 131072, 1, 65536, 131073, 1, 65537, 131074, 1, 65537, 131075, 1, 65537, 131076, 1, 65537, 131077, 1, 65537, 131078, 1, 65537, 131079, 1, 65537, 131080, 1, 65537, 131081, 1, 65537, 131082, 1, 65537, 131083, 1, 65537, 131084, 1, 65537, 131085, 1, 65537, 131086, 1, 65538, 196608, 1, 65536, 196609, 1, 65537, 196610, 1, 65537, 196611, 1, 65537, 196612, 1, 65537, 196613, 1, 65537, 196614, 1, 65537, 196615, 1, 65537, 196616, 1, 65537, 196617, 1, 65537, 196618, 1, 65537, 196619, 1, 65537, 196620, 1, 65537, 196621, 1, 65537, 196622, 1, 65538, 262144, 1, 65536, 262145, 1, 65537, 262146, 1, 65537, 262147, 1, 65537, 262148, 1, 65537, 262149, 1, 65537, 262150, 1, 65537, 262151, 1, 65537, 262152, 1, 65537, 262153, 1, 65537, 262154, 1, 65537, 262155, 1, 65537, 262156, 1, 65537, 262157, 1, 65537, 262158, 1, 65538, 327680, 1, 65536, 327681, 1, 65537, 327682, 1, 65537, 327683, 1, 65537, 327684, 1, 65537, 327685, 1, 65537, 327686, 1, 65537, 327687, 1, 65537, 327688, 1, 65537, 327689, 1, 65537, 327690, 1, 65537, 327691, 1, 65537, 327692, 1, 65537, 327693, 1, 65537, 327694, 1, 65538, 393216, 1, 65536, 393217, 1, 65537, 393218, 1, 65537, 393219, 1, 65537, 393220, 1, 65537, 393221, 1, 65537, 393222, 1, 65537, 393223, 1, 65537, 393224, 1, 65537, 393225, 1, 65537, 393226, 1, 65537, 393227, 1, 65537, 393228, 1, 65537, 393229, 1, 65537, 393230, 1, 65538, 458752, 1, 65536, 458753, 1, 65537, 458754, 1, 65537, 458755, 1, 65537, 458756, 1, 65537, 458757, 1, 65537, 458758, 1, 65537, 458759, 1, 65537, 458760, 1, 65537, 458761, 1, 65537, 458762, 1, 65537, 458763, 1, 65537, 458764, 1, 65537, 458765, 1, 65537, 458766, 1, 65538, 524288, 1, 65536, 524289, 1, 65537, 524290, 1, 65537, 524291, 1, 65537, 524292, 1, 65537, 524293, 1, 65537, 524294, 1, 65537, 524295, 1, 65537, 524296, 1, 65537, 524297, 1, 65537, 524298, 1, 65537, 524299, 1, 65537, 524300, 1, 65537, 524301, 1, 65537, 524302, 1, 65538, 589824, 1, 65536, 589825, 1, 65537, 589826, 1, 65537, 589827, 1, 65537, 589828, 1, 65537, 589829, 1, 65537, 589830, 1, 65537, 589831, 1, 65537, 589832, 1, 65537, 589833, 1, 65537, 589834, 1, 65537, 589835, 1, 65537, 589836, 1, 65537, 589837, 1, 65537, 589838, 1, 65538, 655360, 1, 65536, 655361, 1, 65537, 655362, 1, 65537, 655363, 1, 65537, 655364, 1, 65537, 655365, 1, 65537, 655366, 1, 65537, 655367, 1, 65537, 655368, 1, 65537, 655369, 1, 65537, 655370, 1, 65537, 655371, 1, 65537, 655372, 1, 65537, 655373, 1, 65537, 655374, 1, 65538, 720896, 1, 65536, 720897, 1, 65537, 720898, 1, 65537, 720899, 1, 65537, 720900, 1, 65537, 720901, 1, 65537, 720902, 1, 65537, 720903, 1, 65537, 720904, 1, 65537, 720905, 1, 65537, 720906, 1, 65537, 720907, 1, 65537, 720908, 1, 65537, 720909, 1, 65537, 720910, 1, 65538, 786432, 1, 65536, 786433, 1, 65537, 786434, 1, 65537, 786435, 1, 65537, 786436, 1, 65537, 786437, 1, 65537, 786438, 1, 65537, 786439, 1, 65537, 786440, 1, 65537, 786441, 1, 65537, 786442, 1, 65537, 786443, 1, 65537, 786444, 1, 65537, 786445, 1, 65537, 786446, 1, 65538, 851968, 1, 65536, 851969, 1, 65537, 851970, 1, 65537, 851971, 1, 65537, 851972, 1, 65537, 851973, 1, 65537, 851974, 1, 65537, 851975, 1, 65537, 851976, 1, 65537, 851977, 1, 65537, 851978, 1, 65537, 851979, 1, 65537, 851980, 1, 65537, 851981, 1, 65537, 851982, 1, 65538, 917504, 1, 65536, 917505, 1, 65537, 917506, 1, 65537, 917507, 1, 65537, 917508, 1, 65537, 917509, 1, 65537, 917510, 1, 65537, 917511, 1, 65537, 917512, 1, 65537, 917513, 1, 65537, 917514, 1, 65537, 917515, 1, 65537, 917516, 1, 65537, 917517, 1, 65537, 917518, 1, 65538, 983040, 1, 65536, 983041, 1, 65537, 983042, 1, 65537, 983043, 1, 65537, 983044, 1, 65537, 983045, 1, 65537, 983046, 1, 65537, 983047, 1, 65537, 983048, 1, 65537, 983049, 1, 65537, 983050, 1, 65537, 983051, 1, 65537, 983052, 1, 65537, 983053, 1, 65537, 983054, 1, 65538, 1048576, 1, 65536, 1048577, 1, 65537, 1048578, 1, 65537, 1048579, 1, 65537, 1048580, 1, 65537, 1048581, 1, 65537, 1048582, 1, 65537, 1048583, 1, 65537, 1048584, 1, 65537, 1048585, 1, 65537, 1048586, 1, 65537, 1048587, 1, 65537, 1048588, 1, 65537, 1048589, 1, 65537, 1048590, 1, 65538, 1114112, 1, 131072, 1114113, 1, 131073, 1114114, 1, 131073, 1114115, 1, 131073, 1114116, 1, 131073, 1114117, 1, 131073, 1114118, 1, 131073, 1114119, 1, 131073, 1114120, 1, 131073, 1114121, 1, 131073, 1114122, 1, 131073, 1114123, 1, 131073, 1114124, 1, 131073, 1114125, 1, 131073, 1114126, 1, 131074 )

[node name="Skills" parent="CharacterMenu/Tabs" instance=ExtResource( 12 )]

[node name="Feats" parent="CharacterMenu/Tabs" instance=ExtResource( 12 )]
show_behind_parent = true
position = Vector2( 45, 0 )

[node name="Statuses" parent="CharacterMenu/Tabs" instance=ExtResource( 12 )]
show_behind_parent = true
position = Vector2( 90, 0 )

[node name="SkillsScreen" type="Node2D" parent="CharacterMenu"]

[node name="SkillsList" type="Node2D" parent="CharacterMenu/SkillsScreen"]
position = Vector2( 9, 36 )

[node name="Combat" parent="CharacterMenu/SkillsScreen/SkillsList" instance=ExtResource( 13 )]
position = Vector2( 18, 9 )

[node name="Armour" parent="CharacterMenu/SkillsScreen/SkillsList" instance=ExtResource( 13 )]
position = Vector2( 18, 19 )

[node name="Evocation" parent="CharacterMenu/SkillsScreen/SkillsList" instance=ExtResource( 13 )]
position = Vector2( 18, 29 )

[node name="Enchantment" parent="CharacterMenu/SkillsScreen/SkillsList" instance=ExtResource( 13 )]
position = Vector2( 18, 39 )

[node name="Divination" parent="CharacterMenu/SkillsScreen/SkillsList" instance=ExtResource( 13 )]
position = Vector2( 18, 49 )

[node name="Abjuration" parent="CharacterMenu/SkillsScreen/SkillsList" instance=ExtResource( 13 )]
position = Vector2( 18, 59 )

[node name="Conjuration" parent="CharacterMenu/SkillsScreen/SkillsList" instance=ExtResource( 13 )]
position = Vector2( 18, 69 )

[node name="PHY saves" parent="CharacterMenu/SkillsScreen/SkillsList" instance=ExtResource( 13 )]
position = Vector2( 18, 79 )

[node name="WIL saves" parent="CharacterMenu/SkillsScreen/SkillsList" instance=ExtResource( 13 )]
position = Vector2( 18, 89 )

[node name="Perception" parent="CharacterMenu/SkillsScreen/SkillsList" instance=ExtResource( 13 )]
position = Vector2( 18, 99 )

[node name="Thievery" parent="CharacterMenu/SkillsScreen/SkillsList" instance=ExtResource( 13 )]
position = Vector2( 18, 109 )

[node name="TextContainer" type="Node2D" parent="CharacterMenu/SkillsScreen"]
position = Vector2( 9, 162 )
scale = Vector2( 0.25, 0.25 )

[node name="Label" type="Label" parent="CharacterMenu/SkillsScreen/TextContainer"]
margin_right = 40.0
margin_bottom = 14.0
custom_colors/font_color = Color( 0.807843, 0.858824, 0.882353, 1 )
custom_fonts/font = ExtResource( 8 )
text = "Skill points:"

[node name="RemainingPoints" type="Label" parent="CharacterMenu/SkillsScreen/TextContainer"]
margin_left = 180.0
margin_right = 216.0
margin_bottom = 35.0
custom_colors/font_color = Color( 0.807843, 0.858824, 0.882353, 1 )
custom_fonts/font = ExtResource( 8 )
text = "3"
