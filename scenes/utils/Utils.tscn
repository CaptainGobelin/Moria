[gd_scene load_steps=2 format=2]

[sub_resource type="GDScript" id=1]
script/source = "extends Node

func addArticle(name: String, nb = 1):
	if nb > 1:
		name = name.replace(\"Potion\", \"Potions\")
		name = name.replace(\"Scroll\", \"Scrolls\")
		name = name.replace(\"knife\", \"knives\")
		return String(nb) + \" \" + name
	var firstLetter = name[0].to_lower()
	var article = \"a\"
	match firstLetter:
		\"a\": article = \"an\"
		\"e\": article = \"an\"
		\"i\": article = \"an\"
		\"o\": article = \"an\"
		\"u\": article = \"an\"
	return article + \" \" + name

func makeList(array: Array):
	var result = \"\"
	var count = 0
	var limit = array.size() - 1
	for s in array:
		if count == 0:
			result = s
		elif count < limit:
			result += \", \" + s
		else:
			result += \" and \" + s
		count += 1
	return result

func chooseRandom(array: Array):
	return array[randi() % array.size()]

func modulo(a: int, b: int):
	return (b + (a % b)) % b

func dist(a: Vector2, b: Vector2) -> int:
	return int(abs(a.x - b.x) + abs(a.y - b.y))

func printDict(dict: Dictionary):
	if dict.empty():
		print(\"Empty dict\")
	for k in dict.keys():
		prints(String(k), \":\", dict[k])

func toRoman(number: int) -> String:
	match number:
		1:
			return \"I\"
		2:
			return \"II\"
		3:
			return \"III\"
		4:
			return \"IV\"
		5:
			return \"V\"
		6:
			return \"VI\"
		7:
			return \"VII\"
		8:
			return \"VIII\"
		9:
			return \"IX\"
	return String(number)
"

[node name="Utils" type="Node"]
script = SubResource( 1 )
